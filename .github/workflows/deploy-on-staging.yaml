# @see https://github.com/deployphp/action
# @see https://deployer.org/docs/7.x/getting-started

name: deploy

on:
  workflow_call:
    # Map the workflow outputs to job outputs
    inputs:
      triggering-sha:
        required: true
        type: string

# It is important to specify "concurrency" for the workflow,
# to prevent concurrency between different deploys.
concurrency: staging_environment

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Checkout on SHA-${{ inputs.triggering-sha }}
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.triggering-sha }}

      - name: Show CI job info (dump context)
        if: ${{ vars.SHOW_WORKFLOW_INFO == '1'}}
        uses: crazy-max/ghaction-dump-context@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@2.26.0
        with:
          php-version: '8.1'
          tools: composer

      - name: Install Composer dependencies
        run: |
          composer install --prefer-dist --no-progress --no-scripts --ansi
          composer bin deployer install

      - name: Deploy
        uses: deployphp/action@v1
        with:
          deployer-version: "7.3.1"
          dep: deploy stage -o branch=main
          private-key: ${{ secrets.DEPLOYER_PRIVATE_SSH_KEY }}
          deployer-binary: "./vendor/bin/dep"


  enable-maintenance-mode:
    name: Enable Maintenace mode
    if: ${{ vars.ENABLE_MAINTENANCE_MODE_AFTER_DEPLOY_ON_STAGING == '1'}}
    runs-on: ubuntu-latest
    environment: staging
    needs:
      - deploy

    steps:
      - name: Checkout on SHA-${{ inputs.triggering-sha }}
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.triggering-sha }}

      - name: Show CI job info (dump context)
        if: ${{ vars.SHOW_WORKFLOW_INFO == '1'}}
        uses: crazy-max/ghaction-dump-context@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@2.26.0
        with:
          php-version: '8.1'
          tools: composer

      - name: Install Composer dependencies
        run: |
          composer install --prefer-dist --no-progress --no-scripts --ansi
          composer bin deployer install

      - name: Enable Maintenance Mode after deploy
        uses: deployphp/action@v1
        with:
          deployer-version: "7.3.1"
          dep: maintenance:on stage
          private-key: ${{ secrets.DEPLOYER_PRIVATE_SSH_KEY }}
          deployer-binary: "./vendor/bin/dep"
