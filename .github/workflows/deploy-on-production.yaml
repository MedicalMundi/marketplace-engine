# @see https://github.com/deployphp/action
# @see https://deployer.org/docs/7.x/getting-started

name: deploy

on:
  workflow_call:
    # Map the workflow outputs to job outputs
    inputs:
      triggering-sha:
        required: true
        type: string

# It is important to specify "concurrency" for the workflow,
# to prevent concurrency between different deploys.
# @see https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: production_environment
  cancel-in-progress: true

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout on SHA-${{ inputs.triggering-sha }}
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.triggering-sha }}

      - name: Show CI job info (dump context)
        if: ${{ vars.SHOW_WORKFLOW_INFO == '1'}}
        uses: crazy-max/ghaction-dump-context@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@2.33.0
        with:
          php-version: '8.1'
          tools: composer

      - name: Install Composer dependencies
        run: |
          composer install --prefer-dist --no-progress --no-scripts --ansi
          composer bin deployer install

      - uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ toJSON(secrets) }}

      - name: Prepare env file for production
        run: |
          rm -f .env
          touch .env
          echo APP_ENV="$APP_ENV" >> .env
          echo APP_SECRET="$APP_SECRET" >> .env
          echo DATABASE_URL="$DATABASE_URL" >> .env
          echo LOCK_DSN="$LOCK_DSN" >> .env
          echo MAILER_DSN="$MAILER_DSN" >> .env
          echo OAUTH_OEMODULES_CLIENT_ID="$OAUTH_OEMODULES_CLIENT_ID" >> .env
          echo OAUTH_OEMODULES_CLIENT_SECRET="$OAUTH_OEMODULES_CLIENT_SECRET" >> .env

      - name: Detect release version number
        id: detect-release-version-number
        # Tag name: @see https://github.com/orgs/community/discussions/26686
        run: echo ${{ github.ref_name }}

      - name: Deploy
        uses: deployphp/action@v1
        with:
          deployer-version: "7.3.3"
          dep: deploy production --tag=${{ github.ref_name }}
          private-key: ${{ secrets.DEPLOYER_PRIVATE_SSH_KEY }}
          deployer-binary: "./vendor/bin/dep"


  enable-maintenance-mode:
    name: Enable Maintenace mode
    if: ${{ vars.ENABLE_MAINTENANCE_MODE_AFTER_DEPLOY_ON_PRODUCTION == '1'}}
    runs-on: ubuntu-latest
    needs:
      - deploy

    steps:
      - name: Checkout on SHA-${{ inputs.triggering-sha }}
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.triggering-sha }}

      - name: Show CI job info (dump context)
        if: ${{ vars.SHOW_WORKFLOW_INFO == '1'}}
        uses: crazy-max/ghaction-dump-context@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@2.33.0
        with:
          php-version: '8.1'
          tools: composer

      - name: Install Composer dependencies
        run: |
          composer install --prefer-dist --no-progress --no-scripts --ansi
          composer bin deployer install

      - name: Enable Maintenance Mode after deploy
        if: ${{ vars.ENABLE_MAINTENANCE_MODE_AFTER_DEPLOY_ON_PRODUCTION }}
        uses: deployphp/action@v1
        with:
          deployer-version: "7.3.3"
          dep: maintenance:on production
          private-key: ${{ secrets.DEPLOYER_PRIVATE_SSH_KEY }}
          deployer-binary: "./vendor/bin/dep"
