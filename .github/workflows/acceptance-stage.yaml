name: Acceptance stage

on:
  workflow_call:
    # Map the workflow outputs to job outputs
    inputs:
      triggering-sha:
        required: true
        type: string

defaults:
  run:
    shell: bash
    working-directory: engine-service

env:
  # PHP SETTINGS
  PHP_EXTENSIONS: json
  PHP_EXTENSIONS_CACHE_KEY: cache-php-extensions-v1

jobs:
  acceptance-checks:
    name: Acceptance checks ${{ matrix.php-version }}
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    services:
      mysql:
        image: mariadb:10.6.21
        env:
          MYSQL_ROOT_PASSWORD: test
          MYSQL_USER: test
          MYSQL_PASSWORD: test
          MYSQL_DATABASE: symfony_test
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
    strategy:
      matrix:
        php-version:
          - '8.1'
        is-php-experimental: [ false ]
        generate-coverage-report: [ false ]
      fail-fast: false
    steps:
      - name: Checkout on SHA-${{ inputs.triggering-sha }}
        uses: actions/checkout@v5
        with:
          ref: ${{ inputs.triggering-sha }}

      - name: Show CI job info (dump context)
        if: ${{ vars.SHOW_WORKFLOW_INFO == '1'}}
        uses: crazy-max/ghaction-dump-context@v2.3.0

      - name: info triggering workflow - commit message
        run: echo commit message from triggering workflow '${{ github.event.workflow_run.head_commit.message }}'

      - name: Setup PHP and composer dependencies
        uses: './.github/actions/php-composer-setup'
        with:
          php-version: ${{ matrix.php-version }}
          composer-working-directory: 'engine-service'
          php-extensions: ${{ env.PHP_EXTENSIONS }}
          extensions-cache-key:  ${{ env.PHP_EXTENSIONS_CACHE_KEY }}
          use-php-extensions-cache: ${{ vars.USE_PHP_EXTENSION_CACHE }}
          use-composer-cache: ${{ vars.USE_COMPOSER_CACHE }}
          composer-install-args: '--no-interaction --prefer-dist --no-progress --ansi'
          coverage: xdebug
          ini-values: memory_limit=-1

      - name: Run database migrations
        if: ${{ github.ref_name == 'main' }}
        run: ./bin/console doctrine:migrations:migrate -e test -n -vv --allow-no-migration --ansi
        env:
          DATABASE_URL: mysql://test:test@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony?serverVersion=mariadb-10.6.21

      - name: Run database schema update
        if: ${{ github.ref_name != 'main' }}
        run: ./bin/console doctrine:schema:update -e test --force --ansi
        env:
          DATABASE_URL: mysql://test:test@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony?serverVersion=mariadb-10.6.21

      - name: Run database schema validate
        run: ./bin/console doctrine:schema:validate -e test --ansi
        env:
          DATABASE_URL: mysql://test:test@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony?serverVersion=mariadb-10.6.21


  integration-test:
    name: Integration tests ${{ matrix.php-version }}
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    services:
      mysql:
        image: mariadb:10.6.21
        env:
          MYSQL_ROOT_PASSWORD: test
          MYSQL_USER: test
          MYSQL_PASSWORD: test
          MYSQL_DATABASE: symfony_test
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
    strategy:
      matrix:
        php-version:
          - '8.1'
        is-php-experimental: [ false ]
        generate-coverage-report: [ false ]
      fail-fast: false
    steps:
      - name: Checkout on SHA-${{ inputs.triggering-sha }}
        uses: actions/checkout@v5
        with:
          ref: ${{ inputs.triggering-sha }}

      - name: Setup PHP and composer dependencies
        uses: './.github/actions/php-composer-setup'
        with:
          php-version: ${{ matrix.php-version }}
          composer-working-directory: 'engine-service'
          php-extensions: ${{ env.PHP_EXTENSIONS }}
          extensions-cache-key:  ${{ env.PHP_EXTENSIONS_CACHE_KEY }}
          use-php-extensions-cache: ${{ vars.USE_PHP_EXTENSION_CACHE }}
          use-composer-cache: ${{ vars.USE_COMPOSER_CACHE }}
          composer-install-args: '--no-interaction --prefer-dist --no-progress --ansi'
          coverage: none
          ini-values: memory_limit=-1

      - name: Run database migrations
        if: ${{ github.ref_name == 'main' }}
        run: ./bin/console doctrine:migrations:migrate -e test -n -vv --allow-no-migration --ansi
        env:
          DATABASE_URL: mysql://test:test@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony?serverVersion=mariadb-10.6.21

      - name: Run database schema update
        if: ${{ github.ref_name != 'main' }}
        run: ./bin/console doctrine:schema:update -e test --force --ansi
        env:
          DATABASE_URL: mysql://test:test@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony?serverVersion=mariadb-10.6.21

      - name: Run database schema validate
        run: ./bin/console doctrine:schema:validate -e test --ansi
        env:
          DATABASE_URL: mysql://test:test@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony?serverVersion=mariadb-10.6.21

      - name: Run integration testsuite
        run: ./bin/phpunit --testsuite integration --no-progress
        env:
          DATABASE_URL: mysql://test:test@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony?serverVersion=mariadb-10.6.21


  functional-test:
    name: Functional tests ${{ matrix.php-version }}
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    services:
      mysql:
        image: mariadb:10.6.21
        env:
          MYSQL_ROOT_PASSWORD: test
          MYSQL_USER: test
          MYSQL_PASSWORD: test
          MYSQL_DATABASE: symfony_test
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
    strategy:
      matrix:
        php-version:
          - '8.1'
        is-php-experimental: [ false ]
        generate-coverage-report: [ false ]
      fail-fast: false
    steps:
      - name: Checkout on SHA-${{ inputs.triggering-sha }}
        uses: actions/checkout@v5
        with:
          ref: ${{ inputs.triggering-sha }}

      - name: Show CI job info (dump context)
        if: ${{ vars.SHOW_WORKFLOW_INFO == '1'}}
        uses: crazy-max/ghaction-dump-context@v2.3.0

      - name: info triggering workflow - commit message
        run: echo commit message from triggering workflow '${{ github.event.workflow_run.head_commit.message }}'

      - name: Setup PHP and composer dependencies
        uses: './.github/actions/php-composer-setup'
        with:
          php-version: ${{ matrix.php-version }}
          composer-working-directory: 'engine-service'
          php-extensions: ${{ env.PHP_EXTENSIONS }}
          extensions-cache-key:  ${{ env.PHP_EXTENSIONS_CACHE_KEY }}
          use-php-extensions-cache: ${{ vars.USE_PHP_EXTENSION_CACHE }}
          use-composer-cache: ${{ vars.USE_COMPOSER_CACHE }}
          composer-install-args: '--no-interaction --prefer-dist --no-progress --ansi'
          coverage: none
          ini-values: memory_limit=-1

      - name: Run database migrations
        if: ${{ github.ref_name == 'main' }}
        run: ./bin/console doctrine:migrations:migrate -e test -n -vv --allow-no-migration --ansi
        env:
          DATABASE_URL: mysql://test:test@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony?serverVersion=mariadb-10.6.21

      - name: Run database schema update
        if: ${{ github.ref_name != 'main' }}
        run: ./bin/console doctrine:schema:update -e test --force --ansi
        env:
          DATABASE_URL: mysql://test:test@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony?serverVersion=mariadb-10.6.21

      - name: Run database schema validate
        run: ./bin/console doctrine:schema:validate -e test --ansi
        env:
          DATABASE_URL: mysql://test:test@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony?serverVersion=mariadb-10.6.21

      - name: Run integration testsuite
        run: ./bin/phpunit --testsuite functional --no-progress
        env:
          DATABASE_URL: mysql://test:test@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony?serverVersion=mariadb-10.6.21
