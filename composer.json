{
    "name": "medicalmundi/marketplace-engine",
    "type": "project",
    "description": "Marketplace and catalog engine for openemr modules",
    "license": "MIT",
    "require": {
        "php": ">=8.1",
        "ext-ctype": "*",
        "ext-iconv": "*",
        "corley/maintenance-bundle": "^0.5",
        "doctrine/doctrine-bundle": "^2.10",
        "doctrine/doctrine-migrations-bundle": "^3.2",
        "doctrine/orm": "^2.16",
        "ecotone/dbal": "^1.105",
        "ecotone/jms-converter": "^1.105",
        "ecotone/pdo-event-sourcing": "^1.105",
        "ecotone/symfony-bundle": "^1.105",
        "knplabs/knp-menu-bundle": "^3.3",
        "knplabs/packagist-api": "^2.0",
        "nyholm/psr7": "^1.8",
        "psr/http-client": "^1.0",
        "sentry/sentry-symfony": "^4.11",
        "symfony/apache-pack": "^1.0",
        "symfony/asset": "6.4.*",
        "symfony/console": "6.4.*",
        "symfony/dotenv": "6.4.*",
        "symfony/flex": "^2",
        "symfony/framework-bundle": "6.4.*",
        "symfony/http-client": "^6.0",
        "symfony/mailer": "6.4.*",
        "symfony/monolog-bundle": "^3.8",
        "symfony/notifier": "6.4.*",
        "symfony/runtime": "6.4.*",
        "symfony/security-bundle": "6.4.*",
        "symfony/twig-bundle": "6.4.*",
        "symfony/yaml": "6.4.*",
        "twig/cssinliner-extra": "^3.8",
        "twig/extra-bundle": "^2.12 || ^3.0",
        "twig/inky-extra": "^3.8",
        "twig/twig": "^2.12 || ^3.0"
    },
    "replace": {
        "symfony/polyfill-ctype": "*",
        "symfony/polyfill-iconv": "*",
        "symfony/polyfill-php72": "*",
        "symfony/polyfill-php73": "*",
        "symfony/polyfill-php74": "*",
        "symfony/polyfill-php80": "*"
    },
    "conflict": {
        "symfony/symfony": "*"
    },
    "require-dev": {
        "bamarni/composer-bin-plugin": "^1.8",
        "php-http/mock-client": "^1.6",
        "phpunit/phpunit": "^9.5",
        "symfony/browser-kit": "6.4.*",
        "symfony/css-selector": "6.4.*",
        "symfony/debug-bundle": "6.4.*",
        "symfony/phpunit-bridge": "^6.4",
        "symfony/stopwatch": "6.4.*",
        "symfony/web-profiler-bundle": "6.4.*"
    },
    "config": {
        "allow-plugins": {
            "bamarni/composer-bin-plugin": true,
            "composer/package-versions-deprecated": true,
            "php-http/discovery": true,
            "symfony/flex": true,
            "symfony/runtime": true
        },
        "optimize-autoloader": true,
        "preferred-install": {
            "*": "dist"
        },
        "sort-packages": true
    },
    "extra": {
        "bamarni-bin": {
            "bin-links": true,
            "forward-command": false,
            "target-directory": "tools"
        },
        "symfony": {
            "allow-contrib": false,
            "require": "6.4.*"
        }
    },
    "autoload": {
        "psr-4": {
            "App\\": "src/",
            "Catalog\\": "_catalog/src/",
            "BffWeb\\": "_bffWeb/src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "App\\Tests\\": "tests/",
            "Catalog\\Tests\\": "_catalog/tests/",
            "BffWeb\\Tests\\": "_bffWeb/tests/"
        }
    },
    "minimum-stability": "stable",
    "prefer-stable": true,
    "scripts": {
        "post-install-cmd": [
            "@auto-scripts"
        ],
        "post-update-cmd": [
            "@auto-scripts"
        ],
        "ark": "./vendor/bin/phparkitect check",
        "auto-scripts": {
            "cache:clear": "symfony-cmd",
            "assets:install %PUBLIC_DIR%": "symfony-cmd"
        },
        "cs": "./vendor/bin/ecs",
        "cs:fix": "./vendor/bin/ecs --fix",
        "rc": "./vendor/bin/rector --dry-run",
        "rc:fix": "./vendor/bin/rector",
        "sa": "./vendor/bin/psalm",
        "tf": "./vendor/bin/phpunit --testsuite=functional --testdox",
        "ti": "./vendor/bin/phpunit --testsuite=integration --testdox",
        "tu": "./vendor/bin/phpunit --testsuite=unit --testdox"
    },
    "scripts-descriptions": {
        "ark": "Run Architectural checks",
        "cs": "Check php coding style",
        "cs:fix": "Fix php coding style",
        "rc": "Check rector rules",
        "rc:fix": "Fix rector issues",
        "sa": "Check static analysis (phpstan)",
        "tf": "Run functional testsuite",
        "ti": "Run integration testsuite",
        "tu": "Run unit testsuite"
    }
}
